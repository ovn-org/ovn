name: Build and Test

on:
  push:
  pull_request:
  schedule:
    # Run Sunday at midnight
    - cron: '0 0 * * 0'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  build-linux:
    env:
      IMAGE_NAME:  ghcr.io/ovn-org/ovn-tests:ubuntu
      ARCH:        ${{ matrix.cfg.arch }}
      CC:          ${{ matrix.cfg.compiler }}
      LIBS:        ${{ matrix.cfg.libs }}
      OPTS:        ${{ matrix.cfg.opts }}
      TESTSUITE:   ${{ matrix.cfg.testsuite }}
      TEST_RANGE:  ${{ matrix.cfg.test_range }}
      SANITIZERS:  ${{ matrix.cfg.sanitizers }}

    name: linux ${{ join(matrix.cfg.*, ' ') }}
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        cfg:
        - { compiler: gcc, opts: --disable-ssl }
        - { compiler: clang, opts: --disable-ssl }
        - { compiler: gcc, testsuite: test, test_range: "-500" }
        - { compiler: gcc, testsuite: test, test_range: "501-1000" }
        - { compiler: gcc, testsuite: test, test_range: "1001-" }
        - { compiler: clang, testsuite: test, sanitizers: sanitizers, test_range: "-300" }
        - { compiler: clang, testsuite: test, sanitizers: sanitizers, test_range: "301-600" }
        - { compiler: clang, testsuite: test, sanitizers: sanitizers, test_range: "601-900" }
        - { compiler: clang, testsuite: test, sanitizers: sanitizers, test_range: "901-1200" }
        - { compiler: clang, testsuite: test, sanitizers: sanitizers, test_range: "1201-" }
        - { compiler: gcc, testsuite: test, libs: -ljemalloc, test_range: "-500" }
        - { compiler: gcc, testsuite: test, libs: -ljemalloc, test_range: "501-1000" }
        - { compiler: gcc, testsuite: test, libs: -ljemalloc, test_range: "1001-" }
        - { compiler: gcc, testsuite: system-test-userspace, test_range: "-100" }
        - { compiler: gcc, testsuite: system-test-userspace, test_range: "101-200" }
        - { compiler: gcc, testsuite: system-test-userspace, test_range: "201-" }
        - { compiler: gcc, testsuite: system-test, test_range: "-100" }
        - { compiler: gcc, testsuite: system-test, test_range: "101-200" }
        - { compiler: gcc, testsuite: system-test, test_range: "201-" }
        - { compiler: clang, testsuite: system-test, sanitizers: sanitizers, test_range: "-100" }
        - { compiler: clang, testsuite: system-test, sanitizers: sanitizers, test_range: "101-200" }
        - { compiler: clang, testsuite: system-test, sanitizers: sanitizers, test_range: "201-" }
        - { arch: x86, compiler: gcc, opts: --disable-ssl }

    steps:
    - name: checkout
      if: github.event_name == 'push' || github.event_name == 'pull_request'
      uses: actions/checkout@v3
      with:
        submodules: recursive

    # For weekly runs, don't update submodules
    - name: checkout without submodule
      if: github.event_name == 'schedule'
      uses: actions/checkout@v3

    # Weekly runs test using the tip of the most recent stable OVS branch
    # instead of the submodule.
    - name: checkout OVS
      if: github.event_name == 'schedule'
      uses: actions/checkout@v3
      with:
        repository: 'openvswitch/ovs'
        fetch-depth: 0
        path: 'ovs'

    - name: checkout OVS most recent stable branch.
      if: github.event_name == 'schedule'
      run: |
        git checkout \
          $(git branch -a -l '*branch-*' | sed 's/remotes\/origin\///' | \
            sort -V | tail -1)
      working-directory: ovs

    - name: build
      run: sudo -E ./.ci/ci.sh --archive-logs

    - name: upload logs on failure
      if: failure() || cancelled()
      uses: actions/upload-artifact@v3
      with:
        name: logs-linux-${{ join(matrix.cfg.*, '-') }}
        path: logs.tgz

  build-osx:
    env:
      CC:    clang
      OPTS:  --disable-ssl

    name:    osx clang --disable-ssl
    runs-on: macos-latest

    strategy:
      fail-fast: false

    steps:
    - name: checkout
      if: github.event_name == 'push' || github.event_name == 'pull_request'
      uses: actions/checkout@v3
      with:
        submodules: recursive
    # For weekly runs, don't update submodules
    - name: checkout without submodule
      if: github.event_name == 'schedule'
      uses: actions/checkout@v3
    # Weekly runs test using the tip of the most recent stable OVS branch
    # instead of the submodule.
    - name: checkout OVS
      if: github.event_name == 'schedule'
      uses: actions/checkout@v3
      with:
        repository: 'openvswitch/ovs'
        fetch-depth: 0
        path: 'ovs'
    - name: checkout OVS most recent stable branch.
      if: github.event_name == 'schedule'
      run: |
        git checkout \
          $(git branch -a -l '*branch-*' | sed 's/remotes\/origin\///' | \
            sort -V | tail -1)
      working-directory: ovs
    - name: install dependencies
      run:  brew install automake libtool
    - name: update PATH
      run:  |
        echo "$HOME/bin"        >> $GITHUB_PATH
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    - name: set up python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: prepare
      run:  ./.ci/osx-prepare.sh
    - name: build
      run:  ./.ci/osx-build.sh
    - name: upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: logs-osx-clang---disable-ssl
        path: config.log
